#!/usr/bin/python3
import socket
import sys
from _thread import *
import select 
import re 

if len(sys.argv)!=2:
    print(" given input format ./chatserver ip:port ")
    sys.exit()

server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)


Info = (sys.argv[1])
a=Info.split(':')
IP_addr=str(a[0])
port=int(a[1])

server.bind((IP_addr,port))

server.listen(100)

print('Waiting for clients to connect')


clients=[]
clients.append(server)
def clientthread(conn,addr):
    while True:
        
        try:
            nick=conn.recv(2048).decode('utf-8')
            nick1=nick.strip('NICK ')
            regex = re.compile('[@!#$%^&*()?/|}{~:]')
            
            if(regex.search(nick1) == None) and len(nick1)<=12 and 'NICK ' in nick :
                conn.sendall('OK'.encode('utf-8'))
                break
            elif len(nick1) or regex.search(nick1) != None:
                conn.sendall('ERR malformed nick name'.encode('utf-8'))
            else:
                conn.close()
                print(addr[0]+" has disconnected")
                clients.remove(conn)
                del clients[conn]
                break
        except :
                break

        

    while True:
        try:
            if conn in clients:
                message = conn.recv(2048).decode('utf-8')
                message1=message.strip('MSG ')
                
            
                if not message:
                    conn.close()
                    print(addr[0]+" has disconnected")
                    clients.remove(conn)
                    break 

                elif 'MSG ' not in message:
                    conn.sendall('ERROR malformed message'.encode('utf-8'))
                else:

                
                    if len(message1)<=255 :
                    
                        count=0
                        for i in message1[:-1]:
                            if ord(i)<31:
                            
                                count = count +1
                            
                            else:
                                pass
                    #else if and next elif        
                        if count != 0:
                            conn.sendall('ERROR -> dont use control characters'.encode('utf-8'))
                        else:
                            message_to_send = 'MSG '+nick1+' ' + message1[:-1]
                
                            broadcasting(message_to_send,conn,nick1)
                    elif len(message1) > 255 :
                        conn.sendall('ERROR -> message length exceeding 256 characters'.encode('utf-8'))
                   
                

        except KeyboardInterrupt:
            conn.close()
            break


